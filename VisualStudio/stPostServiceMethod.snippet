<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>stPostServiceMethod</Title>
			<Shortcut>stPostServiceMethod</Shortcut>
			<Description>Code snippet for Post Service</Description>
			<Author>CLGA Towa(Cesar Garcia)</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>1</ID>
					<Default>Post</Default>
					<ToolTip>Post</ToolTip>
				</Literal>
				<Literal>
					<ID>2</ID>
					<Default>NameService</Default>
					<ToolTip>NameService</ToolTip>
				</Literal>
				<Literal>
					<ID>4</ID>
					<Default>Controller</Default>
					<ToolTip>Controller</ToolTip>
				</Literal>
				<Literal>
					<ID>5</ID>
					<Default></Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>6</ID>
					<Default>[FromBody] </Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>7</ID>
					<Default>ClassReceiveData</Default>
					<ToolTip>ClassReceiveData</ToolTip>
				</Literal>
				<Literal>
					<ID>8</ID>
					<Default>nameInstance</Default>
					<ToolTip>nameInstance</ToolTip>
				</Literal>
				<Literal>
					<ID>9</ID>
					<Default>NameClassSupport</Default>
					<ToolTip>NameClassSupport</ToolTip>
				</Literal>
				<Literal>
					<ID>10</ID>
					<Default>int</Default>
					<ToolTip>prefix data return</ToolTip>
				</Literal>
				<Literal>
					<ID>11</ID>
					<Default>int</Default>
					<ToolTip>Return type</ToolTip>
				</Literal>
				<Literal>
					<ID>12</ID>
					<Default>int</Default>
					<ToolTip>Resturn type</ToolTip>
				</Literal>
				<Literal>
					<ID>13</ID>
					<Default>Return</Default>
					<ToolTip>Name var return</ToolTip>
				</Literal>
				<Literal>
					<ID>14</ID>
					<Default> = </Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>15</ID>
					<Default>null;</Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>16</ID>
					<Default>using var dbContextTransaction = context.Database.BeginTransaction();</Default>
					<ToolTip>Init transaction</ToolTip>
				</Literal>
				<Literal>
					<ID>17</ID>
					<Default>dbContextTransaction.Commit();</Default>
					<ToolTip>Commit transaction</ToolTip>
				</Literal>
				<Literal>
					<ID>18</ID>
					<Default>dbContextTransaction.Rollback();</Default>
					<ToolTip>Rollback transaction</ToolTip>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[//------------------------------------------------------------------------------------------------------------------
			[Http$1$("[action]")]
			public IActionResult $2$(			
			    //                                              //Method: $1$.
			    //                                              //URL: http://localhost/Odyssey2/$4$
			    //                                              //      /$2$
			
			    //                                               //DESCRIPTION:
			    //                                               //$5$.
			
			    $6$$7$ $8$
			    )
			{
				InftokInfoTokenOdyssey2 inftok = this.GetTokenOdyssey2();
				ServansServiceAnswerDto servansDto = $9$.servans$2$(inftok, $8$);

				IActionResult aresult = base.Ok(servansDto);
				return aresult;
			}
			$selected$ $end$
			//--------------------------------------------------------------------------------------------------------------
			public static ServansServiceAnswerDto $9$.servans$2$(
			    //                                              //Support method of the service
				
				InftokInfoTokenOdyssey2 inftok_I,
			    $7$ $8$_I
			    )
			{
				ServansServiceAnswerDto servansDto;
				
				try
				{
					//											//Establish connection.
					using Odyssey2Context context = new Odyssey2Context();
					using var dbContextTransaction = context.Database.BeginTransaction();
				
					//											//GetPrintshop
					PsPrintShop ps = PsPrintShop.psGetByPrintshopId(inftok_I.strPrintshopId, context);
					
					$12$ $10$$13$$14$$15$
					StStatus st = StStatus.stGetInitialOk();
					if (
						$9$.boolIsValid$2$Data($8$_I, ps, context, 
							st)
						)
					{
						$10$$13$$14$
							$9$.$10$$2$($8$_I, ps, context);
						$17$
					}
					
					servansDto = new ServansServiceAnswerDto(st, $10$$13$);
				}
				catch (Exception ex)
				{
					Tools.subExceptionHandler(ex);
					
					servansDto = ServansServiceAnswerDto.servansGetForException(ex.Message);
				}
			
				return servansDto;	
			}
			
			//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
			private static bool $9$.boolIsValid$2$Data(
			    //                                              //Method that valid data that is received of the service.
			
			    $7$ $8$_I,
				PsPrintShop ps_I,
			    Odyssey2Context context_I,
			    StStatus st_M
			    )
			{			    
			    
			    
			    return st_M.boolStatusOk;
			}
			
			//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
			public static $12$ $9$.$10$$2$(
				//                                              //Method that do task of the service.
				
			    $7$ $8$_I,
			    PsPrintShop ps_I,
			    Odyssey2Context context_I
			    )
			{
			    $12$ $10$$13$$14$$15$

				return $10$$13$;
			}]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>