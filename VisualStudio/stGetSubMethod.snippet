<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>GetSubMethod</Title>
			<Author>BSL Towa(Brayan Sanchez)</Author>
			<Description>Descripcion</Description>
			<Shortcut>stGetSubMethod</Shortcut>
		</Header>
		<Snippet>
			<Code Language="CSharp">
				<![CDATA[
		
        //--------------------------------------------------------------------------------------------------------------
        public static ServansServiceAnswerDto servansServiceName(
            //                                              //Description

            InftokInfoTokenOdyssey2 inftok_I,
            //int intPk
            Object objInputDto_I
            )
        {
            ServansServiceAnswerDto servansDto;
            try
            {
                //                                              //Establish connection.
                using Odyssey2Context context = new Odyssey2Context();
                //                                              //GetPrintshop
                PsPrintShop ps = PsPrintShop.psGetByPrintshopId(inftok_I.strPrintshopId, context);

                StStatus st = StStatus.stGetInitialOk();

                Object obj = null;
                if (
                    HelperClass.boolIsValidServiceNameData(objInputDto_I, st, ps, context)
                    )
                {
                    //                                      //DO something . . .

                    //                                      //Set the output object
                    obj = null;
                }

                servansDto = new ServansServiceAnswerDto(st, obj);
            }
            catch (Exception ex)
            {
                //                                          //Make a log for the exception.
                Tools.subExceptionHandler(ex);

                servansDto = ServansServiceAnswerDto.servansGetForException(ex.Message);
            }

            return servansDto;
        }

        //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
        private static bool boolIsValidServiceNameData(
            //                                              //Validate recieved data

            Object objInputDto_I,
            StStatus st_M,
            PsPrintShop ps_I,
            Odyssey2Context context_I
            )
        {
            /*CASE*/
            if (
                //                                          //
                objInputDto_I.IsNull()
                )
            {
                st_M.subSetDevError("Invalid Data.");
            }
            else if (
                //                                          //
                ps_I.IsNull()
                )
            {
                st_M.subSetDevError("Printshop was null.");
            }
            else if (
                //                                          //
                false
                )
            {
                st_M.subSetUserError("User Error example");
            }
            /*END-CASE*/

            return st_M.boolStatusOk;
        }

				]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
