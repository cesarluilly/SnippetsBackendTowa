<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>stBuildBsoWithEntityClassConcrete</Title>
			<Shortcut>stBuildBsoWithEntityClassConcrete</Shortcut>
			<Description>Code snippet for BSO Class concrete</Description>
			<Author>CLGA Towa(Cesar Garcia)</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>JobjsonJobJson</ID>
					<Default>JobjsonJobJson</Default>
					<ToolTip>Clase BSO</ToolTip>
				</Literal>
				<Literal>
					<ID>abstractDad</ID>
					<Default>abstractDad,</Default>
					<ToolTip>Clase BSO</ToolTip>
				</Literal>
				<Literal>
					<ID>interfaceInfoConcrete</ID>
					<Default>interfaceInfoConcrete,</Default>
					<ToolTip>Interface of the data concrete of the table</ToolTip>
				</Literal>
				<Literal>
					<ID>dtoInfoConcrete</ID>
					<Default>dtoInfoConcrete</Default>
					<ToolTip>Clase BSO</ToolTip>
				</Literal>
				<Literal>
					<ID>JobjsonentityJobJsonEntityDB</ID>
					<Default>JobjsonentityJobJsonEntityDB</Default>
					<ToolTip>Clase Entity</ToolTip>
				</Literal>
				<Literal>
					<ID>jobjsonentityJobJson</ID>
					<Default>jobjsonentityJobJson</Default>
					<ToolTip>Prefijo Entity</ToolTip>
				</Literal>
				<Literal>
					<ID>JobJsonDao</ID>
					<Default>JobJsonDao</Default>
					<ToolTip>Clase Dao</ToolTip>
				</Literal>
				<Literal>
					<ID>jobjsonbso</ID>
					<Default>jobjsonbso</Default>
					<ToolTip>Prefijo de metodo de retorno del BSO</ToolTip>
				</Literal>
				<Literal>
					<ID>contextInstance</ID>
					<Default>private Odyssey2Context context_Z;</Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>assingContextInstance</ID>
					<Default>this.context_Z = context_I;</Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>asTrackingInstance</ID>
					<Default>
						public bool boolAsTracking { get { return boolAsTracking_Z; } }
						private bool boolAsTracking_Z;
					</Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>assingAsTrackingInstance</ID>
					<Default>this.boolAsTracking_Z = boolAsTracking_I;</Default>
					<ToolTip></ToolTip>
				</Literal>
				<Literal>
					<ID>instruccionRemover</ID>
					<Default>//Remover en caso de herede de clase abstracta</Default>
					<ToolTip></ToolTip>
				</Literal>
			</Declarations>
			<Code Language="csharp">
	<![CDATA[//==================================================================================================================
			//                                                      //Responsabilidad: Proporciona propiedades y comportamientos 
			//                                                      //   para el objeto.   
			using System.Data.Entity;
			using System.Linq;
			using Odyssey2Backend.DAO;
			using Odyssey2Backend.DB_Odyssey2;
			using Odyssey2Backend.Transversal;
			
			// Clases y metodos necesarios para construir el BSO. Example -->
			// - Clase BSO : JobjsonJobJsonBso
			// - Clase Entity : JobjsonentityJobJsonEntityDB
			// - Prefijo entity : jobjsonentityJobJson
			// - Clase Dao : JobJsonDao
			// - Prefijo de metodo de retorno del BSO : jobjsonbso
			// - Metodo GetOneByPk del Dao : GetOneByPk

			public class $JobjsonJobJson$Bso : 
				BsoBusinessObject,
				$abstractDad$ 
				$interfaceInfoConcrete$
				IbuscomBussinessCommonInterface
			{
			    //-------------------------------------------------------------------------------------------------------------
			    //                                                  //INSTANCE VARIABLES.

				$selected$ $end$

			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //DYNAMIC VARIABLES.

			    //                                                  //$jobjsonentityJobJson$
			    private $JobjsonentityJobJsonEntityDB$ $jobjsonentityJobJson$_Z;
			    public $JobjsonentityJobJsonEntityDB$ $jobjsonentityJobJson$ $instruccionRemover$
			    {
			        get
			        {
			            return $jobjsonentityJobJson$_Z;
			        }
			    }

			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //DYNAMIC VARIABLES **RelationTo**.



			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //DYNAMIC VARIABLES **Foreign**.



			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //SUPPORT METHODS TO DYNAMIC VARIABLES.
				

			    //-------------------------------------------------------------------------------------------------------------
			    //                                                  //CONSTRUCTORS.

			    //--------------------------------------------------------------------------------------------------------------
			    public $JobjsonJobJson$Bso(
			        $JobjsonentityJobJsonEntityDB$ $jobjsonentityJobJson$_I,
			        Odyssey2Context context_I,
					bool boolAsTracking_I
			        ) : base()
			    {
			        //                                              //Assig data related to Dto.
			        this.$jobjsonentityJobJson$_Z = $jobjsonentityJobJson$_I; $instruccionRemover$					

			        //                                              //Inject dependences.

			    }

			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //TRANSFORMATION METHODS.

				//--------------------------------------------------------------------------------------------------------------
				public void subSetDependences(
					//                                              //SetDependences
					
					)
				{
					
				}

			    //--------------------------------------------------------------------------------------------------------------
			    //                                                  //ACCESS METHODS.
				
				//**************************************************//RelationTo From This Class
				//--------------------------------------------------------------------------------------------------------------
				public static void subGetdarr$jobjsonbso$RelationTo(
					//                                              //Get $jobjsonbso$RelationTo.
				
					IQueryable<$JobjsonentityJobJsonEntityDB$> iqy,
					ref bool boolWasCalculated_IO,
					ref List<$JobjsonJobJson$Bso> darr$jobjsonbso$RelationTo_IO,
					Odyssey2Context context_I,
					bool boolAsTracking_I
					//                                              //Add Dependences init with null.
					//                                              //Example: ClassName nameVar = null, 
					
					)
				{
					if (
						//                                          //Verify that it is false.
						boolWasCalculated_IO != true
						)
					{
						boolWasCalculated_IO = true;
						darr$jobjsonbso$RelationTo_IO = 
							$JobjsonJobJson$Bso.darr$jobjsonbso$FromIQueryable(
								iqy, context_I, boolAsTracking_I);$selected$ $end$
					}
				}
				
				//--------------------------------------------------------------------------------------------------------------
				public static void subGet$jobjsonbso$RelationTo(
					//                                              //Get $jobjsonbso$RelationTo.
				
					IQueryable<$JobjsonentityJobJsonEntityDB$> iqy,
					ref bool boolWasCalculated_IO,
					ref $JobjsonJobJson$Bso $jobjsonbso$RelationTo_IO,
					Odyssey2Context context_I,
					bool boolAsTracking_I
					//                                              //Add Dependences init with null.
					//                                              //Example: ClassName nameVar = null, 
					
					)
				{
					if (
						//                                          //Verify that it is false.
						boolWasCalculated_IO != true
						)
					{
						boolWasCalculated_IO = true;
						$jobjsonbso$RelationTo_IO = 
							$JobjsonJobJson$Bso.$jobjsonbso$FromIQueryable(
								iqy, context_I, boolAsTracking_I);$selected$ $end$
					}
				}
				
				//**************************************************//ForeignTo From This Class
				//--------------------------------------------------------------------------------------------------------------
				public static void subGet$jobjsonbso$Foreign(
					//                                              //Get $jobjsonbso$Foreign.

					int? intnPkForeignFromEntity_I,
					ref bool boolWasCalculated_IO,
					ref $JobjsonJobJson$Bso $jobjsonbso$Foreign_IO,
					Odyssey2Context context_I,
					bool boolAsTracking_I
					)
				{
					if (
						//                                          //Verify that it is false.
						boolWasCalculated_IO != true 
						)
					{
						boolWasCalculated_IO = true;
						if (
							//                                      //Verify if already was inject.
							$jobjsonbso$Foreign_IO != null
							)
						{
							if (
								//                                  //Verify if it is not the same Pk.
								$jobjsonbso$Foreign_IO.intPk != intnPkForeignFromEntity_I
								)
							{
								$jobjsonbso$Foreign_IO = null;
							}
						}

						if (
							//                                      //It has not value
							$jobjsonbso$Foreign_IO == null &&
							//                                      //Verify if PkForeing has a value
							intnPkForeignFromEntity_I != null
							)
						{
							//										//Build the instance.
							$jobjsonbso$Foreign_IO = $selected$ $end$;
						}
					}
				}
				
				//--------------------------------------------------------------------------------------------------------------
			    public static void subAddToDB(
				
			        $dtoInfoConcrete$ dto_I,
			        Odyssey2Context context_M,
					bool boolSaveChanges_I = true
			        )
			    {
				
					$JobjsonentityJobJsonEntityDB$ entity = 
					AutoMapperConfig.mapper.Map<$JobjsonentityJobJsonEntityDB$>(dto_I);
					
					$JobJsonDao$.subAdd(entity, context_M, boolSaveChanges_I);
			    }
				
				//--------------------------------------------------------------------------------------------------------------
			    public static $JobjsonJobJson$Bso $jobjsonbso$AddToDB(
				
			        $dtoInfoConcrete$ dto_I,
			        Odyssey2Context context_M,
					bool boolSaveChanges_I = true
			        )
			    {
				
					$JobjsonentityJobJsonEntityDB$ entity = 
					AutoMapperConfig.mapper.Map<$JobjsonentityJobJsonEntityDB$>(dto_I);
					
					$JobJsonDao$.subAdd(entity, context_M, boolSaveChanges_I);
					
					return new $JobjsonJobJson$Bso(entity, context_M, true);
			    }
				
				//--------------------------------------------------------------------------------------------------------------
			    public static $JobjsonJobJson$Bso $jobjsonbso$FromDB(
				
			        int intPk_I,
			        Odyssey2Context context_I,
					bool boolAsTracking_I
					//                                              //Add Dependences init with null.
					//                                              //Example: ClassName nameVar = null, 
			        )
			    {
			        $JobjsonJobJson$Bso bso = null;

					IQueryable<$JobjsonentityJobJsonEntityDB$> iqy = $JobJsonDao$.GetOneByPk(intPk_I, context_I);
					$JobjsonentityJobJsonEntityDB$ entity;

					if (
						boolAsTracking_I
						)
					{
						entity = iqy.FirstOrDefault();
					}
					else
					{
						entity = iqy.AsNoTracking().FirstOrDefault();
					}

			        if (
			            entity != null
			            )
			            bso = new $JobjsonJobJson$Bso(entity, context_I, boolAsTracking_I);
			        return bso;
			    }

			    //--------------------------------------------------------------------------------------------------------------
			    public static $JobjsonJobJson$Bso $jobjsonbso$FromIQueryable(
				
			        IQueryable<$JobjsonentityJobJsonEntityDB$> iqy_I,
			        Odyssey2Context context_I,
					bool boolAsTracking_I
					//                                              //Add Dependences init with null.
					//                                              //Example: ClassName nameVar = null, 
			        )
			    {
			        $JobjsonJobJson$Bso bso = null;
			        
					$JobjsonentityJobJsonEntityDB$ entity;

					if (
						boolAsTracking_I
						)
					{
						entity = iqy_I.FirstOrDefault();
					}
					else
					{
						entity = iqy_I.AsNoTracking().FirstOrDefault();
					}

			        if (
			            entity != null
			            )
			            bso = new $JobjsonJobJson$Bso(entity, context_I, boolAsTracking_I);
			        return bso;
			    }

			    //--------------------------------------------------------------------------------------------------------------
			    public static List<$JobjsonJobJson$Bso> darr$jobjsonbso$FromIQueryable(
				
			        IQueryable<$JobjsonentityJobJsonEntityDB$> iqy_I,
			        Odyssey2Context context_I,
					bool boolAsTracking_I
					//                                              //Add Dependences init with null.
					//                                              //Example: ClassName nameVar = null, 
			        )
			    {
			        List<$JobjsonentityJobJsonEntityDB$> darrentity = new List<$JobjsonentityJobJsonEntityDB$>();;

					if (
						boolAsTracking_I
						)
					{
						darrentity = iqy_I.ToList();
					}
					else
					{
						darrentity = iqy_I.AsNoTracking().ToList();
					}

			        List<$JobjsonJobJson$Bso> darrbso = darrentity.Select(entity => new $JobjsonJobJson$Bso(entity, 
			                context_I, boolAsTracking_I)).ToList();

			        return darrbso;
			    }
				
				//--------------------------------------------------------------------------------------------------------------
				public bool boolIsValidForThePkPrintshop(int intPkPrintshop_I)
				{
					throw new NotImplementedException();
				}
			}

			//==================================================================================================================]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>